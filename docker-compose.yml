version: "3.9"
services:

    traefik:
        image: traefik:2.1
        restart: unless-stopped
        ports:
          - '80:80'
          - '443:443'
        networks:
            - post-service
        volumes:
            - ./traefik:/etc/traefik
            - /var/run/docker.sock:/var/run/docker.sock:ro

    jsemple-dev:
        image: jsem/jsemple-dev:latest
        restart: unless-stopped
        networks:
            - post-service
        depends_on:
            - traefik
        labels:
            - 'traefik.enable=true'
            - 'traefik.http.routers.jsemple-dev.rule=Host(`www.jsemple.dev`,`jsemple.dev`)'
            - 'traefik.http.routers.jsemple-dev.tls=true'
            - 'traefik.http.routers.jsemple-dev.tls.certresolver=lets-encrypt'

    post-backend:
        image: jsem/portfolio-post-service:latest
        restart: unless-stopped
        networks:
            - post-service
        volumes:
            - ./.env.post-backend:/app/.env
        depends_on:
            - traefik
            - post-db
        labels:
            - 'traefik.enable=true'
            - 'traefik.http.routers.post-backend.rule=Host(`www.jsemple.dev`,`jsemple.dev`) && PathPrefix(`/graphql`)'
            - 'traefik.http.routers.post-backend.tls=true'
            - 'traefik.http.routers.post-backend.tls.certresolver=lets-encrypt'
    
    post-db:
        image: postgres:13
        restart: unless-stopped
        volumes:
            - /root/postgresql/data:/var/lib/postgresql/data
        networks:
            - post-service
        environment:
            - POSTGRES_DB=${POST_DB_NAME}
            - POSTGRES_USER=${POST_DB_USER}
            - POSTGRES_PASSWORD=${POST_DB_PASSWORD}

    watchtower:
        image: v2tec/watchtower
        restart: unless-stopped
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        command: --interval 30

networks:
    post-service:
